<%-# Storing variables to make easier to read -%>
<% todayDate = Date.today %>
<% todayTime = Time.new(2000, 1, 1, Time.now.strftime("%k"), Time.now.strftime("%M"), Time.now.strftime("%S")) %>

<% content = '' %>


<div id="map">
  <script>
    var map;
    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), {
        center: {
          lat: 51.243325,
          lng: -0.589844
        },
        zoom: 17,
        // Found in coffeescript files
        styles: mapStyle
      });

      // These arrays are to call markers made from the ruby code
      var markers = [];
      var contents = [];

      <% LandMark.all.each do |mark| %>
      // Making marker
      var mark_<%= mark.id %> = new google.maps.Marker({
        map: map,
        position: {
          lat: <%= mark.lat %>,
          lng: <%= mark.long %>
        },
        // Determines What Icon to display
        <% if mark.is_gym %>
        icon: '<%= image_path('map/marker_gym.png') %>'
        <% else %>
        icon: '<%= image_path('map/marker_poke_stop.png') %>'
        <% end %>
      });
      markers.push(mark_<%= mark.id %>);

      <%- # This section determines what to be put into the 'content' section -%>
      <% if mark.is_gym %>
        <% @spot_raid = SpotRaid.where("created_at >= ? and remaining_time >= ? and land_mark_id = ?", todayDate, todayTime, mark.id)%>
          <% if @spot_raid.blank? %>
            <% content = "<p> No raids spotted here. Did you spot one? Add it! </p>" %>
          <% else %>
            <% @spot_raid.each do | spot | %>
              <% content = "<p> level #{spot.tier} #{Pokemon.where("id = ?", spot.pokemon_id).last.name} raid ending at: #{spot.remaining_time.strftime("%k:%M")} #{link_to 'View Raid', spot_raid_url(spot.id), :class => "btn btn-link btn-primary text-white"} </p><br>" %>
            <% end %>
          <% end %>
      <% else %>
        <% @poke_event =PokeEvent.where("created_at >= ? and land_mark_id = ?", (30.minutes.ago), mark.id)%>
        <% if @poke_event.blank? %>
          <% content = "<p> No events found </p>"%>
        <% else %>
          <% @poke_event.each do | event | %>
            <% content = "<p> <strong>#{event.title}</strong> by #{User.where("id = ?", event.user_id).last.trainer} #{link_to 'View', poke_event_url(event.id), :class => "btn btn-link btn-primary text-white"} </p><br>" %>
          <% end %>
        <% end %>
      <% end %>

      // Making information based on the marker
      var info_<%= mark.id %> = '<div class=\"container\">'
        + '<h4> <%= mark.name %> </h4>'
        + '<div class=\"container\" style=\"margin-top: 10px; margin-bottom: 10px\">'
        + '<%= raw content %>'
        + '</div>'
        + '<div class="text-center"> <% if mark.is_gym %> <%= link_to 'View Spotted Raids', spot_raids_url(land_mark_id: mark.id), class: 'btn btn-primary linky mb-3' %><% end %></div>'
        + '<div class= "text-center"> <% if mark.is_gym %> <%= link_to 'Found Raid', new_spot_raid_url(land_mark_id: mark.id), class: 'btn btn-primary linky' %> <% else %><div class="text-center py-2"><%= link_to 'Found Poke event', new_poke_event_url(land_mark_id: mark.id), class: 'btn btn-primary linky' %></div> <% end %></div>'
        + '</div>';
      contents.push(info_<%= mark.id %>);

      <%-# empty the content -%>
      <% content = '' %>
      <% end %>

      // This whole setup is to allow each marker display their own content but share the same infoWindow
      // When the infoWindow is requested when its already opened someonewhere else it will close the current
      // one and open the requested one
      function bindInfoWindow(marker, map, infowindow, content) {
          marker.addListener('click', function() {
          infowindow.setContent(content);
          infowindow.open(map, this);
        });
      }

      var infoWindow = new google.maps.InfoWindow();

      for (var i = 0; i < markers.length; i++) {
        bindInfoWindow(markers[i], map, infoWindow, contents[i]);
      }



    }
  </script>
</div>

<script async="async" defer="defer" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCVqQXR-NMqREuqwTCTA58MmYWAa_LyOEg&callback=initMap"></script>
